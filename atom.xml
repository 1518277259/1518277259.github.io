<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ysp博客</title>
  
  <subtitle>风雨同路人</subtitle>
  <link href="https://1518277259.github.io/atom.xml" rel="self"/>
  
  <link href="https://1518277259.github.io/"/>
  <updated>2022-03-29T11:09:14.117Z</updated>
  <id>https://1518277259.github.io/</id>
  
  <author>
    <name>杨书平</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>元素居中</title>
    <link href="https://1518277259.github.io/2022/03/29/%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD/"/>
    <id>https://1518277259.github.io/2022/03/29/%E5%85%83%E7%B4%A0%E5%B1%85%E4%B8%AD/</id>
    <published>2022-03-29T11:05:26.000Z</published>
    <updated>2022-03-29T11:09:14.117Z</updated>
    
    <content type="html"><![CDATA[<h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="1-行内元素水平居中"><a href="#1-行内元素水平居中" class="headerlink" title="1.行内元素水平居中"></a>1.行内元素水平居中</h3><p><strong>利用 text-align: center 可以实现在块级元素内部的行内元素水平居中。</strong> 此方法对inline、inline-block、inline-table和inline-flex元素水平居中都有效。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span>&#123;</span><br><span class="line">        //在父容器设置</span><br><span class="line">        <span class="attribute">text-align</span>:center;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>此外，如果块级元素内部包着也是一个块级元素，<strong>我们可以先将其由块级元素改变为行内块元素，再通过设置行内块元素居中以达到水平居中。</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;child&quot;</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.parent</span>&#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>:center;  </span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.child</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-块级元素的水平居中"><a href="#2-块级元素的水平居中" class="headerlink" title="2.块级元素的水平居中"></a>2.块级元素的水平居中</h3><p>①、 将该块级元素左右外边距margin-left和margin-right设置为auto</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.child</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;//确保该块级元素定宽</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②、使用table+margin</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;Demo&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.child</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>③、使用absolute+transform</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;Demo&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.child</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translateX</span>(-<span class="number">50%</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>④、使用flex+justify-content</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;Demo&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>⑤、使用flex+margin</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;Demo&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.child</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、多块级元素水平居中"><a href="#3、多块级元素水平居中" class="headerlink" title="3、多块级元素水平居中"></a>3、多块级元素水平居中</h3><p>①、利用flex布局</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②、利用inline-block</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inline-block</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、浮动元素水平居中"><a href="#4、浮动元素水平居中" class="headerlink" title="4、浮动元素水平居中"></a>4、浮动元素水平居中</h3><p>①、定宽的非浮动元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line">   <span class="attribute">position</span>:relative;</span><br><span class="line">   <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">   <span class="attribute">margin-left</span>:-<span class="number">250px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">span</span> class=&quot;child&quot; style=&quot;<span class="attribute">float</span>: left;<span class="attribute">width</span>: <span class="number">500px</span>;&quot;&gt;我是要居中的浮动元素&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><p>②、不定宽的浮动元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;我是浮动的&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;我也是居中的&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">float</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>③、通用办法flex布局(不管是定宽还是不定宽)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.chlid</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;//有无宽度不影响居中</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">span</span> class=&quot;chlid&quot;&gt;我是要居中的浮动元素&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5、绝对定位元素水平居中"><a href="#5、绝对定位元素水平居中" class="headerlink" title="5、绝对定位元素水平居中"></a>5、绝对定位元素水平居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;让绝对定位的元素水平居中对齐。&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">  <span class="selector-class">.parent</span>&#123;</span><br><span class="line">        <span class="attribute">position</span>:relative;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="selector-class">.child</span>&#123;</span><br><span class="line">         <span class="attribute">position</span>: absolute; <span class="comment">/*绝对定位*/</span></span><br><span class="line">         <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">         <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">         <span class="attribute">background</span>: yellow;</span><br><span class="line">         <span class="attribute">margin</span>: <span class="number">0</span> auto; <span class="comment">/*水平居中*/</span></span><br><span class="line">         <span class="attribute">left</span>: <span class="number">0</span>; <span class="comment">/*此处不能省略，且为0*/</span></span><br><span class="line">         <span class="attribute">right</span>: <span class="number">0</span>;<span class="comment">/*此处不能省略，且为0*/</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><h3 id="1-单行内联元素垂直居中"><a href="#1-单行内联元素垂直居中" class="headerlink" title="1.单行内联元素垂直居中"></a>1.单行内联元素垂直居中</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=&quot;box&quot;&gt;</span><br><span class="line">     &lt;<span class="selector-tag">span</span>&gt;单行内联元素垂直居中。&lt;/<span class="selector-tag">span</span>&gt;。</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"> <span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f69c55</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-多行内联元素垂直居中"><a href="#2-多行内联元素垂直居中" class="headerlink" title="2.多行内联元素垂直居中"></a>2.多行内联元素垂直居中</h3><p>①、利用flex布局（flex）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span>&gt;Dance like nobody is watching, <span class="selector-tag">code</span> like everybody is.    </span><br><span class="line">    Dance like nobody is watching, <span class="selector-tag">code</span> like everybody is.    </span><br><span class="line">    Dance like nobody is watching, <span class="selector-tag">code</span> like everybody is.&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-class">.parent</span> &#123; </span><br><span class="line">        <span class="attribute">height</span>: <span class="number">140px</span>;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">flex-direction</span>: column;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f69c55</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>②、利用表布局（table）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=&quot;child&quot;&gt;The more technology you learn, the more you realize how little you know.</span><br><span class="line">    The more technology you learn, the more you realize how little you know.</span><br><span class="line">    The more technology you learn, the more you realize how little you know.&lt;/<span class="selector-tag">p</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"> &lt;style&gt;</span><br><span class="line">    <span class="selector-class">.parent</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: table;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">140px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">2px</span> dashed <span class="number">#f69c55</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.child</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: table-cell;</span><br><span class="line">        <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-块级元素垂直居中"><a href="#3-块级元素垂直居中" class="headerlink" title="3 块级元素垂直居中"></a>3 块级元素垂直居中</h3><p>①、使用absolute+负margin(已知高度宽度)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;固定高度的块级元素垂直居中。&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>②、使用absolute+transform</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;未知高度的块级元素垂直居中。&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.child</span> &#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>③、使用flex+align-items</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;未知高度的块级元素垂直居中。&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"><span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">align-items</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>④、使用table-cell+vertical-align</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=&quot;parent&quot;&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> class=&quot;child&quot;&gt;Demo&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  <span class="selector-class">.parent</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h2><h3 id="1、绝对定位与负边距实现（已知高度宽度）"><a href="#1、绝对定位与负边距实现（已知高度宽度）" class="headerlink" title="1、绝对定位与负边距实现（已知高度宽度）"></a>1、绝对定位与负边距实现（已知高度宽度）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// css部分</span><br><span class="line"> <span class="selector-id">#container</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="selector-id">#center</span> &#123;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">margin</span>: -<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">// <span class="selector-tag">html</span>部分(这部分不做变化,下面例子直接共用)</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> id=&#x27;container&#x27;&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> id=&#x27;center&#x27; style=&quot;<span class="attribute">width</span>: <span class="number">100px</span>;<span class="attribute">height</span>: <span class="number">100px</span>;<span class="attribute">background-color</span>: <span class="number">#666</span><span class="string">&quot;&gt;center&lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h3 id="2、绝对定位与margin-auto（已知高度宽度）"><a href="#2、绝对定位与margin-auto（已知高度宽度）" class="headerlink" title="2、绝对定位与margin:auto（已知高度宽度）"></a>2、绝对定位与margin:auto（已知高度宽度）</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">     <span class="attribute">position</span>: relative;</span><br><span class="line">     <span class="attribute">height</span>:<span class="number">100px</span>;//必须有个高度</span><br><span class="line">   &#125;</span><br><span class="line"><span class="selector-id">#center</span> &#123;</span><br><span class="line">     <span class="attribute">position</span>: absolute;</span><br><span class="line">     <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">margin</span>: auto;//注意此处的写法</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="3、绝对定位-CSS3-未知元素的高宽"><a href="#3、绝对定位-CSS3-未知元素的高宽" class="headerlink" title="3、绝对定位+CSS3(未知元素的高宽)"></a>3、绝对定位+CSS3(未知元素的高宽)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-id">#center</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4、flex布局"><a href="#4、flex布局" class="headerlink" title="4、flex布局"></a>4、flex布局</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;//直接在父容器设置即可</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100vh</span>;//必须有高度</span><br><span class="line">   <span class="attribute">display</span>: flex;</span><br><span class="line">   <span class="attribute">justify-content</span>: center;</span><br><span class="line">   <span class="attribute">align-items</span>: center;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5、flex-x2F-grid与margin-auto-最简单写法"><a href="#5、flex-x2F-grid与margin-auto-最简单写法" class="headerlink" title="5、flex&#x2F;grid与margin:auto(最简单写法)"></a>5、flex&#x2F;grid与margin:auto(最简单写法)</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;//必须有高度</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="selector-id">#center</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h2&gt;&lt;h3 id=&quot;1-行内元素水平居中&quot;&gt;&lt;a href=&quot;#1-行内元素水平居中&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="CSS" scheme="https://1518277259.github.io/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://1518277259.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>实现三栏布局的方法</title>
    <link href="https://1518277259.github.io/2022/03/29/%E5%AE%9E%E7%8E%B0%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://1518277259.github.io/2022/03/29/%E5%AE%9E%E7%8E%B0%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2022-03-29T08:53:29.000Z</published>
    <updated>2022-03-29T08:54:34.102Z</updated>
    
    <content type="html"><![CDATA[<h2 id="浮动布局"><a href="#浮动布局" class="headerlink" title="浮动布局"></a>浮动布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Layout<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span> * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.layout</span> <span class="selector-tag">article</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">min-height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--浮动布局  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;layout float&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">&quot;screen&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.layout</span><span class="selector-class">.float</span> <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.layout</span><span class="selector-class">.float</span> <span class="selector-class">.center</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.layout</span><span class="selector-class">.float</span> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;left-right-center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> // 右栏部分要写在中间内容之前</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h2</span>&gt;</span>浮动解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                1.这是三栏布局的浮动解决方案； 2.这是三栏布局的浮动解决方案； 3.这是三栏布局的浮动解决方案； 4.这是三栏布局的浮动解决方案； 5.这是三栏布局的浮动解决方案； 6.这是三栏布局的浮动解决方案；</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>浮动布局的优点就是比较简单，兼容性也比较好。但浮动布局是有局限性的，浮动元素脱离文档流，要做清除浮动，这个处理不好的话，会带来很多问题，比如父容器高度塌陷等。</strong></p><h2 id="绝对布局"><a href="#绝对布局" class="headerlink" title="绝对布局"></a>绝对布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left-center-right</span>&gt;<span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: absolute;//三块都是绝对定位</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">right</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">left</span>: <span class="number">300px</span>;//离左右各三百</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"> <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;left-center-right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>绝对定位解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">1.这是三栏布局的浮动解决方案； 2.这是三栏布局的浮动解决方案； 3.这是三栏布局的浮动解决方案； 4.这是三栏布局的浮动解决方案； 5.这是三栏布局的浮动解决方案； 6.这是三栏布局的浮动解决方案；</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>绝对定位布局优点就是快捷，设置很方便，而且也不容易出问题。缺点就是，容器脱离了文档流，后代元素也脱离了文档流，高度未知的时候，会有问题，这就导致了这种方法的有效性和可使用性是比较差的。</strong></p><h2 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left-center-right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css"><span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;left-center-right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>flexbox解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">1.这是三栏布局的浮动解决方案； 2.这是三栏布局的浮动解决方案； 3.这是三栏布局的浮动解决方案； 4.这是三栏布局的浮动解决方案； 5.这是三栏布局的浮动解决方案； 6.这是三栏布局的浮动解决方案；</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>lexbox布局是css3里新出的一个，它就是为了解决上述两种方式的不足出现的，是比较完美的一个。目前移动端的布局也都是用flexbox。 flexbox的缺点就是IE10开始支持，但是IE10的是-ms形式的。</strong></p><h2 id="表格布局"><a href="#表格布局" class="headerlink" title="表格布局"></a>表格布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left-center-right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: table;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left-center-right</span>&gt;<span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: table-cell;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;left-center-right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>表格布局解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">1.这是三栏布局的浮动解决方案； 2.这是三栏布局的浮动解决方案； 3.这是三栏布局的浮动解决方案； 4.这是三栏布局的浮动解决方案； 5.这是三栏布局的浮动解决方案； 6.这是三栏布局的浮动解决方案；</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>表格布局的兼容性很好(见下图)，在flex布局不兼容的时候，可以尝试表格布局。当内容溢出时会自动撑开父元素。</strong></p><p><strong>表格布局也是有缺陷:①无法设置栏边距；②对seo不友好；③当其中一个单元格高度超出的时候，两侧的单元格也是会跟着一起变高的，然而有时候这并不是我们想要的效果。</strong></p><h2 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left-center-right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: grid;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">grid-template-columns</span>: <span class="number">300px</span> auto <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">grid-template-rows</span>: <span class="number">150px</span>; //行高</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.center</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: yellow;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>三栏布局<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">&quot;left-center-right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>网格布局解决方案<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">1.这是三栏布局的浮动解决方案； 2.这是三栏布局的浮动解决方案； 3.这是三栏布局的浮动解决方案； 4.这是三栏布局的浮动解决方案； 5.这是三栏布局的浮动解决方案； 6.这是三栏布局的浮动解决方案；</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>CSS Grid是创建网格布局最强大和最简单的工具。就像表格一样，网格布局可以让Web设计师根据元素按列或行对齐排列，但他和表格不同，网格布局没有内容结构，从而使各种布局不可能与表格一样。例如，一个网格布局中的子元素都可以定位自己的位置，这样他们可以重叠和类似元素定位。但网格布局的兼容性不好。IE10+上支持，而且也仅支持部分属性。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;浮动布局&quot;&gt;&lt;a href=&quot;#浮动布局&quot; class=&quot;headerlink&quot; title=&quot;浮动布局&quot;&gt;&lt;/a&gt;浮动布局&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    <category term="CSS" scheme="https://1518277259.github.io/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://1518277259.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Flex布局</title>
    <link href="https://1518277259.github.io/2022/03/29/Flex%E5%B8%83%E5%B1%80/"/>
    <id>https://1518277259.github.io/2022/03/29/Flex%E5%B8%83%E5%B1%80/</id>
    <published>2022-03-29T06:37:18.000Z</published>
    <updated>2022-03-29T06:41:36.594Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Flex-基本概念"><a href="#Flex-基本概念" class="headerlink" title="Flex 基本概念"></a>Flex 基本概念</h3><p>在 flex 容器中默认存在两条轴，水平主轴(main axis) 和垂直的交叉轴(cross axis)，这是默认的设置，当然你可以通过修改使垂直方向变为主轴，水平方向变为交叉轴</p><h3 id="Flex-容器"><a href="#Flex-容器" class="headerlink" title="Flex 容器"></a>Flex 容器</h3><p>实现 flex 布局需要先指定一个容器，任何一个容器都可以被指定为 flex 布局，这样容器内部的元素就可以使用 flex 来进行布局。如果你使用块元素如 div，你就可以使用 flex，而如果你使用行内元素，你可以使用 inline-flex。</p><p><strong>需要注意的是：当时设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。</strong></p><h3 id="Flex属性"><a href="#Flex属性" class="headerlink" title="Flex属性"></a>Flex属性</h3><h4 id="1-flex-direction"><a href="#1-flex-direction" class="headerlink" title="1. flex-direction"></a>1. flex-direction</h4><p>决定主轴的方向(即项目的排列方向)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    flex-direction: row | row-reverse | column | column-reverse;</span><br><span class="line"> &#125;</span><br><span class="line"> row，主轴为水平方向，起点在左端。</span><br><span class="line">row-reverse：主轴为水平方向，起点在右端</span><br><span class="line">column：主轴为垂直方向，起点在上沿</span><br><span class="line">column-reverse：主轴为垂直方向，起点在下沿</span><br></pre></td></tr></table></figure><h4 id="2-flex-wrap"><a href="#2-flex-wrap" class="headerlink" title="2. flex-wrap:"></a>2. flex-wrap:</h4><p>决定容器内项目是否可换行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    flex-wrap: nowrap | wrap | wrap-reverse;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line">默认值：nowrap 不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wrap：项目主轴总尺寸超出容器时换行，第一行在上方；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wrap-reverse：换行，第一行在下方</span><br></pre></td></tr></table></figure><h4 id="3-flex-flow"><a href="#3-flex-flow" class="headerlink" title="3. flex-flow:"></a>3. flex-flow:</h4><p>flex-direction 和 flex-wrap 的简写形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">.container &#123;</span><br><span class="line">    flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">默认值为: row nowrap，感觉没什么卵用，老老实实分开写就好了。这样就不用记住这个属性了。</span><br></pre></td></tr></table></figure><h4 id="4-justify-content："><a href="#4-justify-content：" class="headerlink" title="4. justify-content："></a>4. justify-content：</h4><p>定义了项目在主轴的对齐方式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    justify-content: flex-start | flex-end | center | space-between | space-around;&#125;</span><br><span class="line">    </span><br><span class="line">   </span><br><span class="line">默认值: flex-start 左对齐</span><br><span class="line"></span><br><span class="line">flex-end：右对齐</span><br><span class="line"></span><br><span class="line">center：居中</span><br><span class="line"></span><br><span class="line">space-between：两端对齐，项目之间的间隔相等，即剩余空间等分成间隙。</span><br><span class="line"></span><br><span class="line">space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边缘的间隔大一倍。</span><br></pre></td></tr></table></figure><h4 id="5-align-items"><a href="#5-align-items" class="headerlink" title="5. align-items:"></a>5. align-items:</h4><p>定义了项目在交叉轴上的对齐方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    align-items: flex-start | flex-end | center | baseline | stretch;&#125;</span><br><span class="line">    </span><br><span class="line">flex-start：交叉轴的起点对齐</span><br><span class="line"></span><br><span class="line">flex-end：交叉轴的终点对齐</span><br><span class="line"></span><br><span class="line">center：交叉轴的中点对齐</span><br><span class="line"></span><br><span class="line">baseline: 项目的第一行文字的基线对齐</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-align-content"><a href="#6-align-content" class="headerlink" title="6. align-content:"></a>6. align-content:</h4><p>定义了多根轴线的对齐方式，如果项目只有一根轴线，那么该属性将不起作用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.container &#123;</span><br><span class="line">    align-content: flex-start | flex-end | center | space-between | space-around | stretch;&#125;</span><br><span class="line">    </span><br><span class="line">flex-start：轴线全部在交叉轴上的起点对齐</span><br><span class="line"></span><br><span class="line">flex-end：轴线全部在交叉轴上的终点对齐</span><br><span class="line"></span><br><span class="line">center：轴线全部在交叉轴上的中间对齐</span><br><span class="line"></span><br><span class="line">space-between：轴线两端对齐，之间的间隔相等，即剩余空间等分成间隙。</span><br><span class="line"></span><br><span class="line">space-around：每个轴线两侧的间隔相等，所以轴线之间的间隔比轴线与边缘的间隔大一倍。</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Flex-基本概念&quot;&gt;&lt;a href=&quot;#Flex-基本概念&quot; class=&quot;headerlink&quot; title=&quot;Flex 基本概念&quot;&gt;&lt;/a&gt;Flex 基本概念&lt;/h3&gt;&lt;p&gt;在 flex 容器中默认存在两条轴，水平主轴(main axis) 和垂直的交叉轴(</summary>
      
    
    
    
    <category term="CSS" scheme="https://1518277259.github.io/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://1518277259.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>CSS高度塌陷</title>
    <link href="https://1518277259.github.io/2022/03/29/CSS%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7/"/>
    <id>https://1518277259.github.io/2022/03/29/CSS%E9%AB%98%E5%BA%A6%E5%A1%8C%E9%99%B7/</id>
    <published>2022-03-29T06:13:43.000Z</published>
    <updated>2022-03-29T06:36:57.585Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-什么是高度塌陷"><a href="#1-什么是高度塌陷" class="headerlink" title="1.什么是高度塌陷"></a>1.什么是高度塌陷</h4><p>当父元素不设置高度的时候，靠子元素撑大；当子元素浮动后，父元素的高度就会塌陷；父元素下面的元素就会向上移动，导致整个页面混乱。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;box1&quot;&gt;</span><br><span class="line">&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;box3&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">    &#125;</span><br><span class="line">.box2 &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: blue;</span><br><span class="line">float: left;</span><br><span class="line">    &#125;</span><br><span class="line">.box3 &#123;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2.解决方法"></a>2.解决方法</h4><h5 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h5><p>给父元素设置高度，固定高度后父元素的高度无法适应子元素的高度。<strong>弊端：</strong> 不能让元素自适应</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">height:100px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h5><p>&amp;emsp;&amp;emsp;给父元素设置overflow：hidden，解决高度塌陷并实现自适应，<strong>弊端：</strong> 只要里面的内容或元素超出父元素以外就会被隐藏。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h5><p>在浮动元素下面添加一个空白元素，并给它设置一哈属性；<strong>弊端：</strong> 会添加很多空标记，增加结构负担，产生代码冗余</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box2 &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: blue;</span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.clear_fix&#123;   /*空白div的属性*/</span><br><span class="line">clear:both; /*清除两侧浮动*/</span><br><span class="line">height:0;</span><br><span class="line">overflow:hidden;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box1&quot;&gt;</span><br><span class="line">&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;clear_fix&quot;&gt;&lt;/div&gt; /*添加空白div*/</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="方法四："><a href="#方法四：" class="headerlink" title="方法四："></a>方法四：</h5><p>给父元素添加display:table；让父元素转换元素类型和表格一样<strong>弊端：</strong> 会改变当前元素的元素类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">display: table; /* 改变元素类型为表格 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box2 &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: blue;</span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box1&quot;&gt;</span><br><span class="line">&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h5 id="方法五：万能清除法"><a href="#方法五：万能清除法" class="headerlink" title="方法五：万能清除法"></a>方法五：万能清除法</h5><p>通过after伪类元素添加一个空白的块元素，css添加下列属性，并给要清除的div加上clear_fix的类名，无副作用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">.box1 &#123;</span><br><span class="line">border: 10px red solid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box2 &#123;</span><br><span class="line">width: 100px;</span><br><span class="line">height: 100px;</span><br><span class="line">background-color: blue;</span><br><span class="line">float: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.clear_fix:after &#123; /* 要加的属性 */</span><br><span class="line">content: &quot;&quot;; /* 添加内容 */</span><br><span class="line">clear: both; /* 清楚两侧浮动 */</span><br><span class="line">display: block; /* 转换元素类型为块元素 */</span><br><span class="line">height: 0;</span><br><span class="line">overflow: hidden; /* 溢出隐藏属性 */</span><br><span class="line">visibility: hidden;/* 隐藏属性 */</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div class=&quot;box1 clear_fix&quot;&gt;</span><br><span class="line">&lt;div class=&quot;box2&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-什么是高度塌陷&quot;&gt;&lt;a href=&quot;#1-什么是高度塌陷&quot; class=&quot;headerlink&quot; title=&quot;1.什么是高度塌陷&quot;&gt;&lt;/a&gt;1.什么是高度塌陷&lt;/h4&gt;&lt;p&gt;当父元素不设置高度的时候，靠子元素撑大；当子元素浮动后，父元素的高度就会塌陷；父元素</summary>
      
    
    
    
    <category term="CSS" scheme="https://1518277259.github.io/categories/CSS/"/>
    
    
    <category term="CSS" scheme="https://1518277259.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>搭建博客网站</title>
    <link href="https://1518277259.github.io/2022/03/29/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/"/>
    <id>https://1518277259.github.io/2022/03/29/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</id>
    <published>2022-03-29T06:09:54.000Z</published>
    <updated>2022-03-29T06:11:48.546Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm i -g hexo</span><br><span class="line"></span><br><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">npm i hexo-server</span><br><span class="line"></span><br><span class="line">hexo-server</span><br></pre></td></tr></table></figure><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>1.获取模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo.theme.getView(path);</span><br></pre></td></tr></table></figure><ol start="2"><li>设置模板</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo.theme.setView(path, data);</span><br></pre></td></tr></table></figure><p>3.移除模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo.theme.removeView(path);</span><br></pre></td></tr></table></figure><h3 id="配置完成打包上传"><a href="#配置完成打包上传" class="headerlink" title="配置完成打包上传"></a>配置完成打包上传</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean     //删除上次打包</span><br><span class="line">hexo generate   //打包</span><br><span class="line">hexo deploy    /上传</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基础配置&quot;&gt;&lt;a href=&quot;#基础配置&quot; class=&quot;headerlink&quot; title=&quot;基础配置&quot;&gt;&lt;/a&gt;基础配置&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="hexo" scheme="https://1518277259.github.io/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://1518277259.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>字符串常用操作方法</title>
    <link href="https://1518277259.github.io/2022/03/29/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95/"/>
    <id>https://1518277259.github.io/2022/03/29/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E6%96%B9%E6%B3%95/</id>
    <published>2022-03-29T06:05:28.000Z</published>
    <updated>2022-03-29T06:36:43.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-length"><a href="#一-length" class="headerlink" title="一. length"></a>一. length</h3><p>&amp;emsp;&amp;emsp; JS中的字符串有一个length属性，该属性可以用来获取字符串的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const str = &quot;hello&quot;</span><br><span class="line">str.length  //输出结果5 </span><br></pre></td></tr></table></figure><h3 id="二-获取字符串指定位置的值"><a href="#二-获取字符串指定位置的值" class="headerlink" title="二.获取字符串指定位置的值"></a>二.获取字符串指定位置的值</h3><ul><li>charAt() 方法获取到的是指定位置的字符</li><li>charCodeAt()方法获取的是指定位置字符的Unicode值</li></ul><p><strong>charAt()</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const str = &quot;hello&quot;</span><br><span class="line">str.chatAt(1) // 输出结果：e</span><br><span class="line">str[1]   // 输出结果：e</span><br><span class="line">str.charAt(5) // 输出结果：&quot;&quot;</span><br><span class="line">str[5]  // 输出结果：undefine</span><br></pre></td></tr></table></figure><p><strong>charCodeAt()</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let str = &quot;abcdefg&quot;</span><br><span class="line">console.log(str.charCodeAt(1)) // &quot;b&quot;--&gt; 98</span><br></pre></td></tr></table></figure><h3 id="三-检索字符串是否包含特定序列"><a href="#三-检索字符串是否包含特定序列" class="headerlink" title="三.检索字符串是否包含特定序列"></a>三.检索字符串是否包含特定序列</h3><ol><li>indexOf()</li></ol><p>&amp;emsp;&amp;emsp;查找某个字符，有则返回第一次匹配到的位置，否则返回-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">string.indexOf(searchvalue,fromindex)</span><br><span class="line"></span><br><span class="line">searchvalue:必需，规定需检索的字符串值</span><br><span class="line">fromindex：可选的整数参数，规定在字符串开始检索的位置。合法取值范围是0-string.length-1.如省略，则从字符串的首字符开始检索</span><br><span class="line"></span><br><span class="line">let str = &quot;abcdefgabc&quot;</span><br><span class="line">console.log(str.indexOf(&quot;a&quot;)) // 输出结果：0</span><br><span class="line">console.log(str.indexOf(&quot;z&quot;)) // 输出结果：-1</span><br><span class="line">console.log(str.indexOf(&quot;c&quot;,4)) //输出结果：9</span><br></pre></td></tr></table></figure><ol start="2"><li>lastIndexOf()</li></ol><p>&amp;emsp;&amp;emsp;查找某个字符，有则返回最后一次匹配的位置，否则返回-1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let str = “abcabc”</span><br><span class="line">console.log(str.lastIndexOf(&quot;a&quot;)) // 输出结果：3</span><br><span class="line">console.log(str.lastIndexOf(&quot;z&quot;)) // 输出结果：-1</span><br></pre></td></tr></table></figure><ol start="3"><li>includes()</li></ol><p>&amp;emsp;&amp;emsp;该方法用于判断字符串是否包含指定的子字符串，如果找到指定的子字符串，返回true，否则返回false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">string.includes(searchvalue,start)</span><br><span class="line"></span><br><span class="line">searchvalue:必需，要查找的字符串</span><br><span class="line">start:可选，设置从那个位置开始查找，默认为0</span><br><span class="line"></span><br><span class="line">let str = &quot;Hello world&quot;</span><br><span class="line">str.includes(&quot;o&quot;) // 输出结果:true</span><br><span class="line">str.includes(&quot;z&quot;) // 输出结果：false</span><br><span class="line">str.includes(&quot;e&quot;,2) // 输出结果：false</span><br></pre></td></tr></table></figure><ol start="4"><li>startsWith()</li></ol><p>&amp;emsp;&amp;emsp;该方法用于检测字符串是否以指定的子字符串开始。如果是以指定的子字符串开头返回 true，否则 false。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let str = &#x27;Hello world!&#x27;;</span><br><span class="line"></span><br><span class="line">str.startsWith(&#x27;Hello&#x27;) // 输出结果：true</span><br><span class="line">str.startsWith(&#x27;Helle&#x27;) // 输出结果：false</span><br><span class="line">str.startsWith(&#x27;wo&#x27;, 6) // 输出结果：true</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>endsWith()</li></ol><p>&amp;emsp;&amp;emsp;该方法用来判断当前字符串是否是以指定的子字符串结尾。如果传入的子字符串在搜索字符串的末尾则返回 true，否则将返回 false。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">string.endsWith(searchvalue, length)</span><br><span class="line"></span><br><span class="line">searchvalue：必需，要搜索的子字符串；</span><br><span class="line">length： 设置字符串的长度，默认值为原始字符串长度 string.length。</span><br><span class="line"></span><br><span class="line">let str = &#x27;Hello world!&#x27;;</span><br><span class="line"></span><br><span class="line">str.endsWith(&#x27;!&#x27;)       // 输出结果：true</span><br><span class="line">str.endsWith(&#x27;llo&#x27;)     // 输出结果：false</span><br><span class="line">str.endsWith(&#x27;llo&#x27;, 5)  // 输出结果：true</span><br></pre></td></tr></table></figure><h3 id="四、连接多个字符串concat"><a href="#四、连接多个字符串concat" class="headerlink" title="四、连接多个字符串concat()"></a>四、连接多个字符串concat()</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">string.concat(string1, string2, ..., stringX)</span><br><span class="line"></span><br><span class="line">let str = &quot;abc&quot;;</span><br><span class="line">console.log(str.concat(&quot;efg&quot;));          //输出结果：&quot;abcefg&quot;</span><br><span class="line">console.log(str.concat(&quot;efg&quot;,&quot;hijk&quot;)); //输出结果：&quot;abcefghijk&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五、字符串分割成数组split"><a href="#五、字符串分割成数组split" class="headerlink" title="五、字符串分割成数组split()"></a>五、字符串分割成数组split()</h3><p>&amp;emsp;&amp;emsp;用于把一个字符串分割成字符串数组，该方法不会改变原始字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string.split(separator,limit)</span><br><span class="line"></span><br><span class="line">separator:必需。字符串或正则表达式，从该参数指定的位置分割string</span><br><span class="line">limit：可选，该参数可指定返回的数组的最大长度，如果设置了该参数，返回的子字符串不会多于这个参数指定的数组；如果没有设置该参数，整个字符串都会被分割，不考虑他的长度</span><br><span class="line"></span><br><span class="line">let str = &quot;abcdef&quot;;</span><br><span class="line">str.split(&quot;c&quot;);    // 输出结果：[&quot;ab&quot;, &quot;def&quot;]</span><br><span class="line">str.split(&quot;&quot;, 4)   // 输出结果：[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;] </span><br></pre></td></tr></table></figure><h3 id="六、截取字符串"><a href="#六、截取字符串" class="headerlink" title="六、截取字符串"></a>六、截取字符串</h3><ol><li>slice()</li></ol><p>&amp;emsp;&amp;emsp;用于提取字符串的某一部分，并以新的字符串返回提取的部分,该方法返回的子串包括开始处的字符，但不包括结束处的字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">string.slice(start,end)</span><br><span class="line"></span><br><span class="line">start:必需，要截取的片段的起始下标，第一个字符串位置为0，如果为负数，则从尾部开始截取</span><br><span class="line">end: 可选，要截取的片段结尾的下标，若未指定此参数，则要提取的字串包含start到原字符串结尾的字符串。如果是负数，则从字符串的尾部开始算起的位置</span><br><span class="line"></span><br><span class="line">let str= &quot;abcdefg&quot;</span><br><span class="line">str.slice(1,6) // 输出结果：“bcdef”</span><br><span class="line">str.slice(1) // 输出结果：“bcdefg”</span><br><span class="line">str.slice() // 输出结果：“abcdefg”</span><br><span class="line">str.slice(-2) //输出结果：“fg”</span><br><span class="line">str.slice(6,1) //输出结果：&quot;&quot;</span><br></pre></td></tr></table></figure><p>2.substr()<br>&amp;emsp;&amp;emsp;用于在字符串中抽取从开始下标开始的指定数目的字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">string.substr(start,length)</span><br><span class="line"></span><br><span class="line">start:必需，要抽取的字串的起始下标。必须是数值。如果是负数，则该参数声明从字符串的尾部开始算起的位置</span><br><span class="line">length：可选，子串中字符数。如果省略了该参数，则返回从stringObject的开始位置到结尾的字串</span><br><span class="line"></span><br><span class="line">let str = &quot;abcdefg&quot;</span><br><span class="line">str.substr(1,6) //输出结果：“bcdefg”</span><br><span class="line">str.substr(1) // 输出结果：“bcdefg”</span><br><span class="line">str.substr(-1) //输出结果：“g”</span><br></pre></td></tr></table></figure><p>3.substring()<br>&amp;emsp;&amp;emsp;用于提取字符串中介于两个指定下标之间的字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">string.substring(from,to)</span><br><span class="line"></span><br><span class="line">from:必需，一个非负的整数，规定要提取的子串的第一个字符在string的位置</span><br><span class="line">to：可选，一个非负的整数，比要提取的子串的最后一个字符在string中的位置多1。如省略，返回的子串会一直到字符串的结尾</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">let str = &quot;abcdefg&quot;</span><br><span class="line">str.substring(1,6) //输出结果：“bcdef”</span><br><span class="line">str.substring(1) //输出结果：“bcdefg”</span><br><span class="line">str.substring()  // 输出结果：“abcdefg”</span><br><span class="line">str.substring(6,1) // 输出结果：“bcdef”</span><br><span class="line">str.substring(-1) // 输出结果：&quot;abcdefg&quot;</span><br></pre></td></tr></table></figure><h3 id="七、字符串大小写转换"><a href="#七、字符串大小写转换" class="headerlink" title="七、字符串大小写转换"></a>七、字符串大小写转换</h3><ol><li>toLowerCase()<br>&amp;emsp;&amp;emsp;用于把字符串转换成小写</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let str = &quot;adABDndj&quot;</span><br><span class="line">str.toLowerCase(); //输出结果：“adabdndj”</span><br></pre></td></tr></table></figure><p>2.toUpperCase()<br>&amp;emsp;&amp;emsp;用于将字符串转换成大写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let str = “asdfGH”</span><br><span class="line">str.toUpperCase(); //输出结果：“ASDFGH”</span><br></pre></td></tr></table></figure><h3 id="八、字符串模式匹配"><a href="#八、字符串模式匹配" class="headerlink" title="八、字符串模式匹配"></a>八、字符串模式匹配</h3><p>1.replace()<br>&amp;emsp;&amp;emsp;用于在字符串中用一些字符串替换名一些字符串，或者替换一个与正则表达式匹配的子串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">string.replace(searchvalue,newvalue)</span><br><span class="line"></span><br><span class="line">searchvalue:必需，规定子字符串或要替换的模式的RwgExp对象。如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换成RegExp对象</span><br><span class="line">newvalue：必需，一个字符串的值</span><br><span class="line"></span><br><span class="line">let str = “abcdef”</span><br><span class="line">str.replace(&quot;c&quot;,&quot;a&quot;) // 输出结果：abadef</span><br><span class="line"></span><br><span class="line">let str=&quot;Mr Blue has a blue house and a blue car&quot;;</span><br><span class="line">str.replace(/blue/gi, &quot;red&quot;);    // 输出结果：&#x27;Mr red has a red house and a red car&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>match()</li></ol><p>&amp;emsp;&amp;emsp;用于在字符串内检索特定的值，或找到一个或多个正则表达式的匹配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string.match(regexp)</span><br><span class="line"></span><br><span class="line">let str = &quot;abcdef&quot;</span><br><span class="line">console.log(str.match(&quot;c&quot;)) // // [&quot;c&quot;, index: 2, input: &quot;abcdef&quot;, groups: undefined]</span><br></pre></td></tr></table></figure><ol start="3"><li>search()</li></ol><p>&amp;emsp;&amp;emsp;用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。只会返回第一次匹配成功的结果;如果没有找到任何匹配的子串，则返回 -1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">string.search(searchvalue)</span><br><span class="line"></span><br><span class="line">let str = &quot;abcdef&quot;;</span><br><span class="line">str.search(/bcd/)   // 输出结果：1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="九、移除字符串首尾空白符"><a href="#九、移除字符串首尾空白符" class="headerlink" title="九、移除字符串首尾空白符"></a>九、移除字符串首尾空白符</h3><ol><li>trim()</li></ol><p>&amp;emsp;&amp;emsp;用于移除字符串首尾空白符，该方法不会改变原始字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let str = &quot;  abcdef  &quot;</span><br><span class="line">str.trim()    // 输出结果：&quot;abcdef&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>trimStart()</li></ol><p>&amp;emsp;&amp;emsp;trimStart() 方法的的行为与trim()一致，不过会返回一个从原始字符串的开头删除了空白的新字符串，不会修改原始字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">const s = &#x27;  abc  &#x27;;</span><br><span class="line"></span><br><span class="line">s.trimStart()   // &quot;abc  &quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>trimEnd()</li></ol><p>&amp;emsp;&amp;emsp;trimEnd() 方法的的行为与trim()一致，不过会返回一个从原始字符串的结尾删除了空白的新字符串，不会修改原始字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const s = &#x27;  abc  &#x27;;</span><br><span class="line"></span><br><span class="line">s.trimEnd()   // &quot;  abc&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="十、获取字符串本身"><a href="#十、获取字符串本身" class="headerlink" title="十、获取字符串本身"></a>十、获取字符串本身</h3><ol><li>valueOf()</li></ol><p>&amp;emsp;&amp;emsp;返回某个字符串对象的原始值，该方法通常由 JavaScript 自动进行调用，而不是显式地处于代码中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let str = &quot;abcdef&quot;</span><br><span class="line">console.log(str.valueOf()) // &quot;abcdef&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li>toString()</li></ol><p>&amp;emsp;&amp;emsp;返回字符串对象本身</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let str = &quot;abcdef&quot;</span><br><span class="line">console.log(str.toString()) // &quot;abcdef&quot;</span><br></pre></td></tr></table></figure><h3 id="十一、重复一个字符串repeat"><a href="#十一、重复一个字符串repeat" class="headerlink" title="十一、重复一个字符串repeat()"></a>十一、重复一个字符串repeat()</h3><p>&amp;emsp;&amp;emsp;返回一个新字符串，表示将原字符串重复n次：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27;.repeat(3)     // 输出结果：&quot;xxx&quot;</span><br><span class="line">&#x27;hello&#x27;.repeat(2) // 输出结果：&quot;hellohello&quot;</span><br><span class="line">&#x27;na&#x27;.repeat(0)    // 输出结果：&quot;&quot;</span><br></pre></td></tr></table></figure><p><strong><em>注意</em>：如果参数是小数，向下取整；如果参数是负数或Infinity，会报错</strong></p><h3 id="十二、补齐字符串长度"><a href="#十二、补齐字符串长度" class="headerlink" title="十二、补齐字符串长度"></a>十二、补齐字符串长度</h3><ol><li>padStart()</li></ol><p>&amp;emsp;&amp;emsp;用于头部补全。该方法有两个参数，其中第一个参数是一个数字，表示字符串补齐之后的长度；第二个参数是用来补全的字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27;.padStart(1, &#x27;ab&#x27;) // &#x27;x&#x27;</span><br><span class="line">&#x27;x&#x27;.padStart(5, &#x27;ab&#x27;) // &#x27;ababx&#x27;</span><br><span class="line">&#x27;x&#x27;.padStart(4, &#x27;ab&#x27;) // &#x27;abax&#x27;</span><br><span class="line">&#x27;x&#x27;.padStart(4) // &#x27;   x&#x27;</span><br><span class="line">&quot;1&quot;.padStart(3, &#x27;0&#x27;)   // 输出结果： &#x27;001&#x27;</span><br><span class="line">&quot;15&quot;.padStart(3, &#x27;0&#x27;)  // 输出结果： &#x27;015&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>padEnd()</li></ol><p>&amp;emsp;&amp;emsp;用于尾部补全。该方法也是接收两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;x&#x27;.padEnd(5, &#x27;ab&#x27;) // &#x27;xabab&#x27;</span><br><span class="line">&#x27;x&#x27;.padEnd(4, &#x27;ab&#x27;) // &#x27;xaba&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="十三、字符串转为数字"><a href="#十三、字符串转为数字" class="headerlink" title="十三、字符串转为数字"></a>十三、字符串转为数字</h3><p>1.parseInt()</p><p>&amp;emsp;&amp;emsp;用于可解析一个字符串，并返回一个整数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">parseInt(string, radix)</span><br><span class="line"></span><br><span class="line">string:必需，要被解析的字符串</span><br><span class="line">radix：可选，表示要解析的数字的基数。</span><br><span class="line"></span><br><span class="line">parseInt(&quot;10&quot;);  // 输出结果：10</span><br><span class="line">parseInt(&quot;17&quot;,8);  // 输出结果：15 (8+7)</span><br><span class="line">parseInt(&quot;010&quot;);  // 输出结果：10 或 8</span><br><span class="line"></span><br><span class="line">parseInt(&quot;0x10&quot;)      // 输出结果：16</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">parseInt(&quot;50&quot;, 1)      // 输出结果：NaN</span><br><span class="line">parseInt(&quot;50&quot;, 40)     // 输出结果：NaN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">parseInt(&quot;40 4years&quot;)   // 输出结果：40</span><br><span class="line"></span><br><span class="line">parseInt(&quot;new100&quot;)     // 输出结果：NaN</span><br><span class="line"></span><br><span class="line">parseInt(&quot;  60  &quot;)    // 输出结果： 60</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>parseFloat(string)</li></ol><p>&amp;emsp;&amp;emsp;可解析一个字符串，并返回一个浮点数。该方法指定字符串中的首个字符是否是数字。如果是，则对字符串进行解析，直到到达数字的末端为止，然后以数字返回该数字，而不是作为字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">parseFloat(&quot;10.00&quot;)      // 输出结果：10.00</span><br><span class="line">parseFloat(&quot;10.01&quot;)      // 输出结果：10.01</span><br><span class="line">parseFloat(&quot;-10.01&quot;)     // 输出结果：-10.01</span><br><span class="line">parseFloat(&quot;40.5 years&quot;) // 输出结果：40.5</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一-length&quot;&gt;&lt;a href=&quot;#一-length&quot; class=&quot;headerlink&quot; title=&quot;一. length&quot;&gt;&lt;/a&gt;一. length&lt;/h3&gt;&lt;p&gt;&amp;amp;emsp;&amp;amp;emsp; JS中的字符串有一个length属性，该属性可</summary>
      
    
    
    
    <category term="JS" scheme="https://1518277259.github.io/categories/JS/"/>
    
    
    <category term="前端" scheme="https://1518277259.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>数组Array的常用方法</title>
    <link href="https://1518277259.github.io/2022/03/29/%E6%95%B0%E7%BB%84Array%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>https://1518277259.github.io/2022/03/29/%E6%95%B0%E7%BB%84Array%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2022-03-29T03:36:26.000Z</published>
    <updated>2022-03-29T06:04:17.195Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Array-map"><a href="#Array-map" class="headerlink" title="Array.map()"></a>Array.map()</h3><p>&amp;emsp;&amp;emsp;将数组中的每一个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">let newArr = arr.map(x =&gt; x*2);</span><br><span class="line">// arr = [1, 2, 3, 4, 5] 原数组保持不变</span><br><span class="line">// newArr = [2, 4, 6, 8, 10] 返回新数组</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-forEach"><a href="#Array-forEach" class="headerlink" title="Array.forEach()"></a>Array.forEach()</h3><p>&amp;emsp;&amp;emsp;将数组中的每个元素执行传进提供的函数，没有返回值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">arr.forEach(x =&gt; x*2);</span><br><span class="line">console.log(arr)</span><br><span class="line">// arr = [1, 2, 3, 4, 5] 数组改变,注意和map区分</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-filter"><a href="#Array-filter" class="headerlink" title="Array.filter()"></a>Array.filter()</h3><p>&amp;emsp;&amp;emsp;将所有元素进行判断，将满足条件的元素作为一个新的数组返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">const isBigEnough = value =&gt; value &gt;= 3;</span><br><span class="line">let newArr = arr.filter(isBigEnough);</span><br><span class="line">// newNum = [3, 4, 5] 满足条件的元素返回为一个新的数组</span><br></pre></td></tr></table></figure><h3 id="Array-eveny"><a href="#Array-eveny" class="headerlink" title="Array.eveny()"></a>Array.eveny()</h3><p>&amp;emsp;&amp;emsp;将所有的元素进行判断返回一个布尔值，如果所有元素都满足条件，返回true，否则返回false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">const isLessThan4 = value =&gt; value &lt; 4;</span><br><span class="line">const isLessThan6 = value =&gt; value &lt; 6;</span><br><span class="line">arr.every(isLessThan4); // false</span><br><span class="line">arr.every(isLessThan6); // true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-some"><a href="#Array-some" class="headerlink" title="Array.some()"></a>Array.some()</h3><p>&amp;emsp;&amp;emsp;此方法是将所有元素进行判断返回一个布尔值，如果存在元素都满足判断条件，则返回true，若所有元素都不满足判断条件，则返回false。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let arr= [1, 2, 3, 4, 5];</span><br><span class="line">const isLessThan4 = value =&gt; value &lt; 4;</span><br><span class="line">const isLessThan6 = value =&gt; value &gt; 6;</span><br><span class="line">arr.some(isLessThan4); // true</span><br><span class="line">arr.some(isLessThan6); // false</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-reduce"><a href="#Array-reduce" class="headerlink" title="Array.reduce()"></a>Array.reduce()</h3><p>&amp;emsp;&amp;emsp;所有元素调用返回函数，返回值为最终结果，传入的值必需是函数类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">const add = (a, b) =&gt; a + b;</span><br><span class="line">let sum = arr.reduce(add);</span><br><span class="line">// sum = 15  相当于累加的效果</span><br><span class="line">// 与之相对应的还有一个 Array.reduceRight() 方法，</span><br><span class="line">// 区别是这个是从右向左操作的</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-push"><a href="#Array-push" class="headerlink" title="Array.push()"></a>Array.push()</h3><p>&amp;emsp;&amp;emsp;在数组的后面添加元素，改变了数组的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var str1 = [12,2,&quot;hello&quot;];</span><br><span class="line">var str2 = [43,2,&quot;test&quot;];</span><br><span class="line">console.log(str1.push(&quot;你好&quot;));           // 4</span><br><span class="line">console.log(str2.push(&quot;hello&quot;,&quot;world&quot;)); // 5</span><br><span class="line">console.log(str1);                       // [12, 2, &quot;hello&quot;,&quot;你好&quot;]</span><br><span class="line">console.log(str2);                       // [43, 2, &quot;test&quot;,&quot;hello&quot;, &quot;world&quot;]</span><br></pre></td></tr></table></figure><h3 id="Array-pop"><a href="#Array-pop" class="headerlink" title="Array.pop()"></a>Array.pop()</h3><p>&amp;emsp;&amp;emsp;在数组后面删除最后一位元素，并返回数组，改变了数组的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">arr.pop();</span><br><span class="line">console.log(arr); // [1, 2, 3, 4]</span><br><span class="line">console.log(arr.length); // 4</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-shift"><a href="#Array-shift" class="headerlink" title="Array.shift()"></a>Array.shift()</h3><p>&amp;emsp;&amp;emsp;删除数组的第一个元素，并返回数组，改变数组的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">arr.shift();</span><br><span class="line">console.log(arr); // [2, 3, 4, 5]</span><br><span class="line">console.log(arr.length); // 4</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-unshift"><a href="#Array-unshift" class="headerlink" title="Array.unshift()"></a>Array.unshift()</h3><p>&amp;emsp;&amp;emsp;将一个或多个元素添加到数组的开头，并返回数组的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var str1 = [12,2,&quot;hello&quot;];</span><br><span class="line">var str2 = [43,2,&quot;test&quot;];</span><br><span class="line">console.log(str1.unshift(&quot;你好&quot;)); // 4</span><br><span class="line">console.log(str2.unshift(&quot;hello&quot;,&quot;world&quot;)); // 5</span><br><span class="line">console.log(str1); // [&quot;你好&quot;, 12, 2, &quot;hello&quot;]</span><br><span class="line">console.log(str2); // [&quot;hello&quot;, &quot;world&quot;, 43, 2, &quot;test&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-isArray"><a href="#Array-isArray" class="headerlink" title="Array.isArray()"></a>Array.isArray()</h3><p>&amp;emsp;&amp;emsp;判断一个对象是不是数组，返回是布尔值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line"></span><br><span class="line">console.log(arr.isArray()); // true</span><br></pre></td></tr></table></figure><h3 id="Array-concat"><a href="#Array-concat" class="headerlink" title="Array.concat()"></a>Array.concat()</h3><p>&amp;emsp;&amp;emsp;可以将多个数组拼成一个数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let arr1 = [1, 2, 3];</span><br><span class="line">arr2 = [4, 5];</span><br><span class="line">let arr = arr1.concat(arr2);</span><br><span class="line">console.log(arr); // [1, 2, 3, 4, 5]</span><br></pre></td></tr></table></figure><h3 id="Array-toString"><a href="#Array-toString" class="headerlink" title="Array.toString()"></a>Array.toString()</h3><p>&amp;emsp;&amp;emsp;将数组转换成字符串，不会改变原数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">let str = arr.toString();</span><br><span class="line">console.log(str); // 1,2,3,4,5</span><br></pre></td></tr></table></figure><h3 id="Array-join"><a href="#Array-join" class="headerlink" title="Array.join()"></a>Array.join()</h3><p>&amp;emsp;&amp;emsp;将数组转成字符串并返回字符串数据，不会改变原来的数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">let str1 = arr.join();</span><br><span class="line">let str2 = arr.join(&#x27;,&#x27;);</span><br><span class="line">let str3 = arr.join(&#x27;##&#x27;);</span><br><span class="line">console.log(str1); // 12345</span><br><span class="line">console.log(str2); // 1,2,3,4,5</span><br><span class="line">console.log(str3); // 1##2##3##4##5</span><br></pre></td></tr></table></figure><h3 id="Array-splice"><a href="#Array-splice" class="headerlink" title="Array.splice()"></a>Array.splice()</h3><p>&amp;emsp;&amp;emsp;Array.splice(开始位置，删除的个数，元素)，万能方法，可以实现增删改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let arr = [1, 2, 3, 4, 5];</span><br><span class="line">let arr1 = arr.splice(2, 0 &#x27;haha&#x27;);</span><br><span class="line">let arr2 = arr.splice(2, 3);</span><br><span class="line">let arr1 = arr.splice(2, 1 &#x27;haha&#x27;);</span><br><span class="line">console.log(arr1); // [1, 2, &#x27;haha&#x27;, 3, 4, 5] 新增一个元素</span><br><span class="line">console.log(arr2); // [1, 2] 删除三个元素</span><br><span class="line">console.log(arr3); // [1, 2, &#x27;haha&#x27;, 4, 5] 替换一个元素</span><br></pre></td></tr></table></figure><h3 id="Array-slice"><a href="#Array-slice" class="headerlink" title="Array.slice()"></a>Array.slice()</h3><p>&amp;emsp;&amp;emsp;此方法截取指定位置的数组，并返回截取的数组，不会改变原数组。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var arr = [&quot;T1&quot;,&quot;J1&quot;,&quot;L1&quot;,&quot;L2&quot;,&quot;M1&quot;];</span><br><span class="line">console.log(arr.slice(1,3));        // [&quot;J1&quot;,&quot;L1&quot;]</span><br><span class="line">console.log(arr.slice(1));          // [&quot;J1&quot;,&quot;L1&quot;,&quot;L2&quot;,&quot;M1&quot;]</span><br><span class="line">console.log(arr.slice(-4,-1));      // [&quot;J1&quot;,&quot;L1&quot;,&quot;L2&quot;]</span><br><span class="line">console.log(arr.slice(-2));         // [&quot;L2&quot;,&quot;M1&quot;]</span><br><span class="line">console.log(arr.slice(1,-2));       // [&quot;J1&quot;,&quot;L1&quot;]</span><br><span class="line">console.log(arr);                   // [&quot;T1&quot;,&quot;J1&quot;,&quot;L1&quot;,&quot;L2&quot;,&quot;M1&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-reverse"><a href="#Array-reverse" class="headerlink" title="Array.reverse()"></a>Array.reverse()</h3><p>&amp;emsp;&amp;emsp;将数组的数据进行反转，并返回反转后的数组，会改变原数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var str1 = [12,2,&quot;hello&quot;];</span><br><span class="line">console.log(str1.reverse()); // [&quot;hello&quot;, 2, 12]</span><br><span class="line">console.log(str1); // [&quot;hello&quot;, 2, 12]</span><br></pre></td></tr></table></figure><h3 id="Array-sort"><a href="#Array-sort" class="headerlink" title="Array.sort()"></a>Array.sort()</h3><p>&amp;emsp;&amp;emsp;将数组内的数据进行排序，并返回排过序的新数组，会改变原来的数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var str1 = [12,2,43,5,2,5];</span><br><span class="line">var str2 = [92,2,43,&quot;hello&quot;,&#x27;zoom&#x27;,5,2,5];</span><br><span class="line">console.log(str1.sort()); // [12, 2, 2, 43, 5, 5]</span><br><span class="line">console.log(str1);       // [12, 2, 2, 43, 5, 5]</span><br><span class="line">console.log(str2.sort()); // [2, 2, 43, 5, 5, 92, &quot;abc&quot;, &quot;hello&quot;, &quot;zoom&quot;]</span><br><span class="line">console.log(str2);        // [2, 2, 43, 5, 5, 92, &quot;abc&quot;, &quot;hello&quot;, &quot;zoom&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-valueOf"><a href="#Array-valueOf" class="headerlink" title="Array.valueOf()"></a>Array.valueOf()</h3><p>&amp;emsp;&amp;emsp;返回数组的原始值，一般由js在后台调用，并不显示的出现在代码中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var str = [1,2,3];</span><br><span class="line">console.log(str.valueOf()); // [1,2,3]</span><br><span class="line">console.log(str); // [1,2,3]</span><br><span class="line">// 为了证明返回的是数组自身</span><br><span class="line">console.log(str.valueOf() == str); // true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-IndexOf"><a href="#Array-IndexOf" class="headerlink" title="Array.IndexOf()"></a>Array.IndexOf()</h3><p>&amp;emsp;&amp;emsp;此方法根据指定的数据，从左向右，查询在数组中出现的位置，如果不存在指定的数据，返回-1，找到了指定的数据返回该数据的索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var str = [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;];</span><br><span class="line">console.log(str.indexOf(&quot;l&quot;));        // 2</span><br><span class="line">console.log(str.indexOf(&quot;l&quot;,3));      // 3</span><br><span class="line">console.log(str.indexOf(&quot;l&quot;,4));      // -1</span><br><span class="line">console.log(str.indexOf(&quot;l&quot;,-1));     // -1</span><br><span class="line">console.log(str.indexOf(&quot;l&quot;,-3));     // 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-includes"><a href="#Array-includes" class="headerlink" title="Array.includes()"></a>Array.includes()</h3><p>&amp;emsp;&amp;emsp;用来判断一个数组是否包含一个指定的值，如果是返回true，否则返回false</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let site = [&#x27;runoob&#x27;, &#x27;google&#x27;, &#x27;taobao&#x27;];</span><br><span class="line">console.log(site.includes(&#x27;runoob&#x27;)); // true </span><br><span class="line">console.log(site.includes(&#x27;baidu&#x27;)); // false</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Array-flat"><a href="#Array-flat" class="headerlink" title="Array.flat()"></a>Array.flat()</h3><p>&amp;emsp;&amp;emsp;用来实现数据的扁平化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let site = [1, 2, [3, 4]];</span><br><span class="line">console.log(arr1.flat());</span><br><span class="line">// [1, 2, 3, 4]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Array-map&quot;&gt;&lt;a href=&quot;#Array-map&quot; class=&quot;headerlink&quot; title=&quot;Array.map()&quot;&gt;&lt;/a&gt;Array.map()&lt;/h3&gt;&lt;p&gt;&amp;amp;emsp;&amp;amp;emsp;将数组中的每一个元素调用一个提供的函</summary>
      
    
    
    
    <category term="JS" scheme="https://1518277259.github.io/categories/JS/"/>
    
    
    <category term="前端" scheme="https://1518277259.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
